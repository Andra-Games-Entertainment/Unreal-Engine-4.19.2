INTSourceChangeList:3172421
Availability:Docs
Title:VR でフォワード レンダリング
Crumbs: %ROOT%, Engine, Engine/Performance
Description:フォワード レンダリングを活用して VR パフォーマンスを高める方法
type: overview
version:4.14
Parent:Engine/Performance
tags:Performance and Profiling
tags:Rendering
tags:VR
topic-image:ForwardRenderingTopic.png
social-image:ForwardRenderingSocial.png
related:Engine/Performance
related:Engine/Performance/GPU
related:Engine/Rendering

[REGION:banner]
![](ForwardRenderingBanner.png)
[/REGION]

[REGION:warning]
現在この機能は実験的なものであり、一部の機能は期待どおりに機能しなかったり、今後改正で変更される可能性があります。 
[/REGION]

[EXCERPT:intro]
アンリアル エンジン 4 はディファード レンダラを使用するデフォルト設定なので、多様性を高め、より多くのレンダラ機能へのアクセスが保証されます。 
ただし、ディファード レンダラにはトレードオフもあります。すべての VR 体験に適しているというわけではありません。 
**フォワード レンダリング** は、レンダリング パスが速くなることで基準値も上がるので、VR プラットフォーム上でのパフォーマンスが良くなる場合があります。 
フォワード レンダライングは速さだけではなく、アンチ エイリアシング オプションも提供しています。 
[/EXCERPT]

[TOC(start:2 end:2)]

## フォワード レンダリングを有効にする

フォワード シェーディング レンダラを有効にするには、**[Project Settings (プロジェクト設定)]** を開いて、**[Rendering (レンダリング)]** で **[Forward Shading]** を有効にします。 

![](EnableForwardShading.png)

エディタを再起動するように促されます。再起動後、フォワード レンダラのオプションと機能が使えるようになります。 

## Multisample Anti-Aliasing を有効にする

Multisample Anti-Aliasing (MSAA) を使用するには、**[Project Settings (プロジェクト設定)]** を開いて **[Rendering]** の **[Default Settings (デフォルト設定)]** の **[Anti-Aliasing Method]** を **[MSAA]** に変更します。

![](EnableMSAA.png)

ディファード レンダラは、テンポラル アンチエイリアシングの処理に便利です。有効解像度が低いために VR ヘッドセットが不鮮明になり、ヘッド トラッキングで生じる継続的なサブピクセルの移動の影響で 2D モニタ上でエッジのちらつきギザギザ現象を抑えることができます。 
MSAA を使うと鮮明なラインを出せますが、すべてのシェーディングを 1 つのフォワード パスで効率的に行うことが要求されます。 

以下は、Temporal AA を有効にした場合と 2X MSAA を有効にした場合の例です。 

[OBJECT:ComparisonSlider]
	[PARAM:before]
	![With Temporal AA](TemporalAA.png)(w:1020)
	[/PARAM]
	[PARAM:after]
	![With 2X MSAA](MSAA.png)(w:1020)
	[/PARAM]
[/OBJECT]

[REGION:note]
コンソール変数 `r.MSAACount` を使って、ピクセルごとに計算する MSAA サンプル数を調節できます。 
`r.MSAACount 1` を代入すると Temporal AA を使用する設定に戻ります。アンチエイリアシング メソッドとの切り替えが簡単になります。 
[/REGION]

## パフォーマンスと機能

ディファード レンダラからフォワード レンダラへ切り替えると、プロジェクトのパフォーマンスが向上する可能性があります。 

ほとんどのパフォーマンスは、デフォルトでフォワード レンダラで無効になっている機能によって改善されます。
マテリアルが高品質の反射を選択していない限り、最も近い反射キャプチャのみがパララックスなしで適用されます。 
同時に、受け取る反射はマテリアル上で有効にしておく必要があります。Height Fog (高さフォグ) は頂点ごとに計算されます。 

![](ExampleImage.png)

フォワード レンダラは、ライトと反射キャプチャを視界外のスペースグリッドへカリングを行うことで処理します。その後で、フォワード パスの各ピクセルがライトと反射キャプチャをイタレートし、影響を与えてマテリアルを共有します。 
Stationary light (固定ライト) の動的シャドウは予め計算されて、スクリーン空間シャドウ マスクのチャンネルにパックされ、オーバーラップする 4 つの Stationary light (固定ライト) 限界部分を強化します。 

ディファード レンダラからフォワード レンダラへ切り替えた時には、アンリアル エンジンの [](Engine/Performance) ツールを使ってゲームのパフォーマンスを必ず評価してください。 
特に [](Engine/Performance/GPU) の GPU 負荷の詳細、およびプロファイリング エフォートで補助するための [](Engine/Performance/StatCommands) の使用場所に注目してみると良いでしょう。
あるいは、[Shader Complexity View Mode](https://docs.unrealengine.com/latest/INT/Engine/UI/LevelEditor/Viewports/ViewModes/#shadercomplexity) も、シーンの各ピクセルの計算に使用するシェーダ命令数の視覚化を可能にするツールです。 

### 現在サポート対象の機能

現在サポート対象の機能は以下のとおりです。 

* 事前計算された背景のシャドウでブレンドするムーバブル オブジェクトの動的シャドウを含む Stationary Lights (固定ライト) のフルサポート。 
* 視差補正で複数の反射キャプチャをまとめてブレンド処理 
* 部分的なシーンの平面反射を反射キャプチャに合成 
* DBuffer デカール
* ライティングとスカイライトの事前計算 
* シャドウなしの Movable Light (可動ライト)
* カプセルシャドウ
* インスタンス化されたステレオとの互換性 

ディファード レンダラでは、**Surface Forward Shading** を半透明のサーフェス (ガラスや水など) に使って、複数のライトからのスペキュラ ハイライト、および視差補正された反射キャプチャからの画像ベースの反射を受け取ることができます。 
これはフォワード レンダリングで実行されるので、ローカルライトのスペキュラ ハイライトはサポートされますが、ディファードのみで使える機能のほとんどはサポートされません。 

この機能は、**[Material]** の **[Translucency]** セクションの **[Lighting Mode]** で有効にします。 

![](LightingModeFowardShading.png)

[REGION:warning]
それぞれのライトの反映がピクセルごとに計算されるので、半透明ライティング メソッドの中で最も負荷が高くなります。 
[/REGION]


## 周知の問題とよくある質問

フォワード レンダラの使用中は、以下の機能は **サポートされていません**: 

* Screen 空間技術 (SSR、SSAO、Contact Shadows)。 
* シャドウキャストする Movable Light (可動ライト) 
* 動的シャドウのついた半透明 
* Stationary Light (固定ライト) から背景シャドウをかぶせた半透明 
* ライト機能と IES プロファイル 
* 今回の実験的リリースでは、DBuffer Decals、Dynamic Shadows、Capsule Shadows 、Atmospheric Fog が MSAA を正しく処理しないので、オブジェクトのエッジにアーティファクトが生じる場合があります。 

以下は、フォワード レンダラの実験版を使用した場合によくある質問 / 問題点です。 

* **フォワード レンダラに切り替えたらマテリアルが壊れてしまいました。GBuffer シーン テクスチャに何か問題がありますか？** 
	* フォワード レンダラでテクスチャ サンプリングのため GBuffer へはアクセスできません。ディラード レンダラのみになります。 
* **フォワード レンダリングはディファード レンダリングよりもテクスチャ サンプリングが少なくなりますか?** 
	* フォワード レンダラはすべての機能が 1 つのシェーダーに入っているので、マテリアルに使用できるテクスチャ サンプリングが少なくなります。 
	* シェーダー サンプルを使えば、通常この問題を解決することができます。 
* **フォワード レンダリング MSAA は、アルファ チャンネルをマスクしたマテリアルの alphe to coverage をサポートしていますか?** 
	* はい、オパシティ マスク入力は MSAA coverage で拒否されるので、マスクされたマテリアルは自動的に **OpacityMaskToCoverage** を使います。 
	* 4x MSAA の 4 つのレベルで Dithered Transparency 処理に使用できます (フォリッジにとても便利です)。 
	* 低負荷なので、マテリアル オプションではなくデフォルト設定で有効になっています。 
* ** なぜ MSAA は Atmospheric Fog のサンプルを見つけることができないのでしょうか?** 
	* Atmospheric Fog はまだ MSAA を正しく処理していません。 
	* Height Fog の場合、**[Project Settings (プロジェクト設定)]** の [Vertex Fogging] をデフォルト設定に戻せば、この問題を回避できます。 
	* つまり、Forward BasePass で計算されてから正しくアンチエイリアシングを行います。 
	* Atmosphere は解決したシーン深度の Deferred Pass でまだ計算されるので、正しいアンチエイリアシングが行えません (今後のアップデートで解決したいと思っています)。 



