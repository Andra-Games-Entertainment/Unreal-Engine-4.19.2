INTSourceChangelist:0
Availability: Docs
Title: Precomputed Lighting Scenarios
Crumbs: %ROOT%, Engine, Engine/Rendering/LightingAndShadows
Description: This page provides an overview of Precomputed Lighting Scenarios in UE4.
Version: 4.14
Parent: Engine/Rendering/LightingAndShadows
Tags: Rendering
Type: Reference
topic-image:PCLS_Header.png

Unreal Engine 4 (UE4) has support for using different Precomputed Lighting Scenarios in levels. This allows a single level to store and display multiple lighting setups giving you the flexibility of dynamic lighting but at the fixed cost of Precomputed lighting. Having the ability to change between different Precomputed Lighting Scenarios is of particular importance for VR or Architectural Visualizations projects that need the highest possibly quality and fastest possible performance. In the following document, we will take a look at how you can use Precomputed lighting in your UE4 projects.

![](PCLS_Comp_Image_00.png)

[REGION:caption]
In the above image the Directional Light, Sky Light, and Skybox have been placed in a Lighting Scenario level called Day Scenario. The Spotlights for the streetlights have been placed in a different Lighting Scenario level called Night Scenario.
[/REGION]


##  Lighting Scenarios

To use Lighting Scenarios in your UE4 projects you will need to do the following:

1. First go to **Window** > **Levels** to open up the Levels manager.

    ![](PCLS_Open_Levels.png)

1. With the Levels manager open, Right- click on a Sublevel in the Levels windows and go to **Lighting Scenario** and then select the **Change to Lighting Scenario** option to make the level a Lighting Scenario level.

    ![](PCLS_LS_Level_Option.png)

    [region:note]
    When a Lighting Scenario level is made visible, its Lightmaps will be applied to the world.
    [/region]

1. Make sure the Level Streaming method is set to Blueprint by Right-clicking on the Sublevel and going to **Change Streaming Method** and then selecting **Blueprint** if not already selected.

    ![](PCLS_Level_Streaming_Method.png)
    
1. Now place any light or Static Meshes your project needs into either of the lighting levels and then build each level's lighting as you would with any other level.

    ![](PCLS_Build_Lighting.png)

1. Once the lighting has finished building, open up the **Persistent Level's** Blueprint and add a **Load Stream Level** node and connect it to the **Event Begin Play** node. 

    ![](PCLS_Level_Load_Nodes.png)

1. Connect the Event Begin Play to the Load Stream Level node and then input the name of the Level you want to load. Also, make sure to check both **Make Visible After Load** and **Should Block on Load** to make sure you can see the newly loaded level.

    ![](PCLS_Steam_Setup.png)

1. Press the **Play** button to launch the project and when the first level loads, it should now be using the Day level lighting. To use the Night level lighting, you can use the same setup but change the level name to your night time level instead of the day time one.

    [OBJECT:ComparisonSlider]
        [PARAM:before]
        ![Day Lighting](PCLS_Day.png)
        [/PARAM]
        [PARAM:after]
        ![Night Lighting](PCLS_Night.png)
        [/PARAM]
    [/OBJECT]

## Limitations
While Precomputed Lighting scenarios have a lot of advantages, there some disadvantages and limitations that you will need to be aware of while using them. In the following section, we will go over what these are and how you can avoid or work around them.

* Only **One** Lighting Scenario level should be visible at any time in a game.
* When a Lighting Scenario level is present, Lightmap data from all Sublevels will be placed inside it so that only the Day Scenario Lightmaps are loaded when it�s daytime. As a result, Lightmaps will no longer be streamed by sublevels.
* A Reflection Capture updated is forced when making a Lighting Scenario level visible, which can increase the level load time.


