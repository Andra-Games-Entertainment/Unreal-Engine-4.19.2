INTSourceChangelist:3346002
Availability:Docs
Title: 메시 데칼 사용법
Description: 메시 데칼 구성 및 사용법 안내입니다.
Crumbs:
parent: Engine/Rendering/Materials/HowTo
type: reference
tags:Materials
version:4.15
skilllevel:intermediate

[TOC (start:2 end:4)]


언리얼 엔진 4 에는 이제 Mesh Decal (메시 데칼)이 지원되어 별도의 표면 지오메트리에 디퍼드 데칼 프로퍼티를 사용할 수 있어 
스태틱 / 스켈레탈 메시에 디테일을 추가할 수 있습니다. 디퍼드 데칼은 투영에 의존하므로, 투영 대상 표면에 일치하지 않으면 잘리고 뒤틀리는 
평면 표면 디테일에 거의 제한됩니다. 메시 데칼은 단순 투영을 따르지 않는 데칼을 제공해 주는 대신 
에지를 감싸는 지오메트리나 스플라인 메시와 함께 사용할 수 있으며, 캐릭터의 외형을 강화시켜 줍니다.


## 메시 데칼 VS 마스크드 머티리얼

메시 데칼은 뎁스 렌더링은 하지 않지만 불투명 지오메트리 렌더 후 GBuffer 와 DBuffer 업데이트를 한다는 점에서 반투명 블렌드 모드와 디퍼드 데칼을 섞은 것입니다.
마스크드 머티리얼을 사용한 것과 비교하면, EarlyZ 패스 비용이 없고, 그림자나 적절한 오클루전도 없지만, 
그에 대한 균형으로 머티리얼에 부드러운 전환이 가능합니다.

메시 데칼은 Deffered Decal Actor (디퍼드 데칼 액터)에 비해 주의해야 할 차이점이 몇 가지 있습니다:

* 커다란 디퍼드 데칼은 종종 앞면과 뒷면 드로 콜을 하므로 드로 콜 수가 적습니다.
* 커버되는 픽셀 수가 적고 평평한 뒷면 데칼은 0 픽셀을 커버하므로 꽤 빠릅니다.
* 커스텀 UV 를 사용할 수 있어 보다 복잡한 투영이 가능합니다.
* 스플라인 상에 늘어나거나 표면을 감싸도록 제대로 노멀 매핑된 데칼을 가질 수 있습니다.

[OBJECT:ComparisonSlider]
	[PARAM:before]
	![ 메시 데칼 ](MeshDecal.png)(w:400)
	[/PARAM]
	[PARAM:after]
	![ 머스크드 머티리얼 ](MaskedMaterial.png)(w:400)
	[/PARAM]
[/OBJECT]


## 콘텐츠 제작

메시 데칼 지오메트리로 사용할 콘텐츠를 제작하는 것은 모델 생성과 밀접한 관계가 있습니다. 이 지오메트리는 디퍼드 데칼 액터처럼 투영에 의존하지 않으므로, 지오메트리는 
영향을 주고자 하는 표면 앞에만 있으면 됩니다. 이 점을 염두에 두고, 데칼 지오메트리는 아래 놓인 표면을 "hug"해야 하지만, 매우 근접하게 일치할 필요는 없습니다. 
이런 작은 오프셋을 위해 이미 약간의 뎁스 바이어스가 하드코딩되어 있기 때문입니다. 또한, 데칼에서 점차 사라지는 지오메트리를 약간 사용하면 
마스크드 머티리얼로는 얻을 수 없는 데칼의 부드러운 전환 효과를 내는 데 좋습니다.

<div align= "left">
[REGION:imagetable]
| ![](MeshDecalAuthoring.png)(h:450) | ![](MeshDecalAuthoringComposite.png)(h:450) |
| --- | --- |
| 베이스 메시 및 데칼 지오메트리 (고립) | 합성 메시 |
[/REGION]
</div>

또 한가지 콘텐츠 개발시 염두에 두어야 할 점은, 메시 데칼은 뎁스 버퍼 정밀도 제한으로 인해 레벨 오브 디테일(LOD)이나 원거리에서 볼 때 문제가 될 수 있습니다.
지오메트리가 교차하거나 의도대로 일치하지 않기 때문입니다. 하지만 대부분의 경우 메시가 이 부분을 고려하도록 변경하거나, 머티리얼의 월드 포지션 오프셋을 사용하여 오프셋을 조절하면 
모델링 프로그램으로 돌아가 별도의 작업을 하지 않아도 됩니다.

![](Offset.png)(w:500)

[OBJECT:ComparisonSlider]
	[PARAM:before]
	![ 오프셋 값: 0 ](2_Offset.png)(w:500)
	[/PARAM]
	[PARAM:after]
	![ 오프셋 값: -0.6 ](1_Offset.png)(w:500)
	[/PARAM]
[/OBJECT]

이 예제에서, 뎁스가 오프셋을 처리하지 못하는 베이스 메시에 데칼 지오메트리가 충분히 가까이 있습니다. 작은 음수 오프셋 값을 사용하면 아래 있는 지오메트리와 교차하지 않을 만큼 지오메트리를 
약간 밀어줍니다.

## 한계점

* 소트 순서를 아티스트가 지정할 수 없습니다.
* 탄젠트 스페이스 지원이 아직 구현되지 않았습니다.
* Shader Overdraw/Overdraw 함수 기능이 빠져있습니다.
* 쉽게 조절 가능한 DepthBias 가 없습니다. 현재 메시 위의 표면에서 메시의 오프셋을 사용하거나, 머티리얼의 월드 포지션 오프셋으로 제어해야 합니다.
* 다수의 레이어가 겹치는 경우 뎁스로 소트하여 부작용을 피합니다.
* 머티리얼 에디터 프리뷰가 보이지 않습니다.
* 머티리얼 에디터에 현재 올바른 인스트럭션 수가 표시되지 않습니다. 베이스 패스 사용량을 추정하기 때문입니다.
* DBuffer 및 non-DBuffer 가 같은 컨테이너를 사용합니다.
* 병렬 렌더링이 아직 후킹되지 않았습니다. 이 기능을 적극 활용하면 CPU 가 약간 절약됩니다.

## 메시 데칼 머티리얼 사용

여기서는 프로젝트에 DBuffer Decal 옵션을 켜 데칼 머티리얼에 라이팅 기능 혜택을 활용하고 스태틱 메시에 적용할 수 있는 
기본적인 디퍼드 데칼 머티리얼을 만들어 보겠습니다.

### 필수 파일

이 안내서를 따라하기 위해서는 다음 FBX 및 텍스처 파일을 다운로드하고 압축을 푼 뒤 UE4 에 임포트해야 합니다. 
그 방법이 익숙치 않은 경우 [](Engine/Content/ImportingContent/ImportingMeshes) 및 [](Engine/Content/ImportingContent/ImportingTextures) 문서를 
참고하세요.

**[필수 텍스처 다운로드](MeshDecalAssets.zip)** (우클릭 - 다른 이름으로 저장)


### 프로젝트에 DBuffer Decals 켜기

1. **편집** 메뉴에서 **프로젝트 세팅** 을 선택하여 언리얼 에디터 옵션을 엽니다.

	![](ProjectSettingsMenu.png)(w:250)
1. **엔진** 제목줄 아래 **Rendering** 섹션에서 **Lighting** 카테고리를 보면 다양한 Lighting 옵션이 있습니다.

	[REGION:lightbox]
	[![](ProjectSettings.png)(w:700)](ProjectSettings.png)
	[/REGION]
1. 여기서 **DBuffer Decals** 옵션을 체크하면 디퍼드 데칼과 함께 라이팅 기능을 사용할 수 있습니다.
	
	![](EnableDBufferDecal.png)(w:350)
	
1. 이 기능을 사용하기 위해서는 먼저 **에디터를 재시작** 해야 합니다.
	
	![](RestartTheEditor.png)(w:550)

	
### 기본 디퍼드 데칼 제작

1. **콘텐츠 브라우저** 에서 **신규 추가** 버튼을 선택하고 **머티리얼** 옵션을 선택하여 새 머티리얼을 만듭니다. 나중에 쉽게 찾을 수 있도록 머티리얼에 이름을 지어주세요.
여기서는 M_MeshDecal 로 했습니다.
	
	![](AddNewMaterial.png)(w:300)

1. 이제 **머티리얼** 을 선택하고 더블클릭하여 엽니다. 머티리얼 에디터가 열리면 디퍼드 데칼로 사용할 수 있도록 **디테일** 패널에 다음 어트리뷰트 설정부터 합니다.

	* **Material Domain:** Deferred Decal
	* **Blend Mode:** Translucent
	* **Decal Blend Mode:** DBuffer Translucent Color, Normal, Roughness 

1. 다음, 이 페이지의 **필수 파일** 섹션의 텍스처를 사용하여 머티리얼 구성을 해야 합니다. .zip 파일에 있는 디퓨즈, 마스크, 노멀 세 개의 텍스처가 필요합니다.
이 텍스처 임포트를 완료했으면, **콘텐츠 브라우저** 에서 선택한 뒤 머티리얼 에디터 그래프에 끌어 놓습니다.

	![](MaterialGraph1.png)(w:400)

	이제 Texture Sample 노드의 출력을 메인 머티리얼 노드의 해당 입력에 연결합니다. 마스크 텍스처 T_MeshDecalDamage_M 의 경우 오파시티 마스크 입력에 연결할 때 **Blue Channel** 출력을 
	사용하도록 합니다. 그래야 보이는 것에 대한 마스크로 텍스처의 파랑 값을 사용합니다.
		
	![](MaterialGraph2.png)(w:400)
1. 머티리얼 그래프에 우클릭한 후 Constant 라 입력하거나, "1" 키를 누르고 그래프를 클릭하여 **Constant** 노드를 추가합니다. 이것을 **러프니스** 입력에 연결하고 기본값을 **0.7** 로 설정합니다.

	![](MaterialGraph3.png)(w:400)
1. 마무리하기 전 베이스 메시에서 데칼 지오메트리의 오프셋 또는 뎁스 정밀도로 인해 발생할 수 있는 부작용을 제어할 수 있는 방법이 필요합니다. 머티리얼 그래프에 다음 노드를 추가하고 
**Multiply** 노드의 출력을 메인 머티리얼 노드의 **월드 포지션 오프셋** 입력에 연결합니다.

	![](MaterialGraph4.png)(w:400)

	완료했으면 머티리얼 그래프는 다음과 같을 것입니다:

	[REGION:lightbox]
	[![](FinalMaterialGraph.png)(w:400)](FinalMaterialGraph.png)
	[/REGION]
1. 디퍼드 데칼 머티리얼이 완료되었으면, 필수 파일 .zip 에 포함된 SM_MeshDecal 스태틱 메시를 레벨에 배치한 뒤 스태틱 메시의 머티리얼 슬롯 중 엘리먼트 0 에 **M_MeshDecal** 머티리얼을 적용합니다.
베이스 메시의 머티리얼의 경우 엘리먼트 1 에 아무 머티리얼 또는 이 데모 목적 상 그냥 기본 컬러를 연결해도 됩니다. 아래 예제와 비슷한 것이 
생겨있을 것입니다.

	![](MeshDecal.png)(w:400)

	
## 최종 결과

메시 데칼과 사용할 자체 머티리얼을 만들어 구성하는 법을 배우셨으니, 이제 모델링 어플리케이션에서 별도의 애셋을 만든 뒤 메시 데칼을 적용하고도 라이팅 장점을 최대한 활용하는 자체 머티리얼을 
제작하실 수 있을 것입니다.
