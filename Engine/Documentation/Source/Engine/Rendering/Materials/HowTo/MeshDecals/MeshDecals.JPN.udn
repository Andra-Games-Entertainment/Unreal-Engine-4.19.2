INTSourceChangelist:3346002
Availability:Docs
Title:メッシュ デカールの使用方法
Description:メッシュ デカールの設定方法および使用方法について説明します。
Crumbs:
parent:Engine/Rendering/Materials/HowTo
type: reference
tags:Materials
version:4.15
skilllevel:intermediate

[TOC (start:2 end:4)]


アンリアル エンジン 4 でメッシュ デカールがサポートされるようになりました。 
これにより、スタティクメッシュおよびスケルタルメッシュに追加した詳細に対して、別のサーフェス ジオメトリ上でディファード デカールのプロパティが使用できます。ディファード デカールはプロジェクションに依存するので、 
投影先のサーフェスにそろっていない場合は、シアおよび変形が生じる平面サーフェイスの詳細にほぼ限られます。メッシュ デカールは、シンプルなプロジェクションを追わずに 
エッジの周囲をラップするジオメトリやスプライン メッシュと一緒に使用し、キャラクターの外見を美しくすることができます。 


## メッシュ デカールとマスク付きマテリアル

メッシュ デカールは、透過ブレンド モードとディファード デカールを混ぜたものです。 
不透明なジオメトリがレンダリングされた後、深部まではレンダリングせず、GBuffer または DBuffer の更新を行います。マスク付きマテリアルの使用とは対照的に、EarlyZ pass の負荷はかからず、 
シャドウあるいは適切なオクルージョンは得ませんが、その代わりマテリアルがソフトに変形します。 

メッシュ デカールは、Deferred Decal アクタとは以下の点で異なります。 

* 大きいディファード デカールは、正面向きと後ろ向きの描画コールをするので、描画コールは少なくなります。
* カバーするピクセルも減り、背面が平らなデカールはピクセルを全くカバーしないので、かなり速くなります。 
* カスタム仕様の UV を使用するので、より複雑なプロジェクションの実行が可能になります。 
* サーフェスの周りをラップしたり、スプラインに沿って伸び、正しく法線マップ化されたデカールが作成できます。

[OBJECT:ComparisonSlider]
	[PARAM:before]
	![ Mesh Decal ](MeshDecal.png)(w:400)
	[/PARAM]
	[PARAM:after]
	![ Masked Material ](MaskedMaterial.png)(w:400)
	[/PARAM]
[/OBJECT]


## コンテンツのオーサリング

コンテンツをメッシュ デカール ジオメトリとして使用するオーサリングは、すべてのモデル作成と一致しています。このジオメトリはディファード デカール アクタのようにプロジェクションに依存はしないので、
ジオメトリは影響を与えたいサーフェスの正面にさえあれば良いです。このことを踏まえた上で、この小さなオフセットの主な原因となる小さな深度バイアスが既にあるので、
デカール ジオメトリは下層のサーフェスには合わせますが、そこまでぴったり一致する必要はありません。さらに、デカールの境界をぼかすジオメトリを少し使うと、
マスク付きマテリアルでは実現できないデカール用の柔らかいトランジションを作成することができます。

<div align= "left">
[REGION:imagetable]
| ![](MeshDecalAuthoring.png)(h:450) | ![](MeshDecalAuthoringComposite.png)(h:450) |
| --- | --- |
| 基本メッシュとデカール ジオメトリ (個々) | 合成したメッシュ |
[/REGION]
</div>

ジオメトリは交差してしまったり、思い通りにぴったりには一致しないため、深度バッファ精度には限度があります。
従って、メッシュ デカールは LOD あるいは長い表示距離が難しいということも覚えておくと良いでしょう。ただしほとんどの場合は、メッシュを変更すれば解決しますし、 
マテリアルに World Position Offset を使えばモデリング アプリケーションに戻らずにオフセットの調節ができます。 

![](Offset.png)(w:500)

[OBJECT:ComparisonSlider]
	[PARAM:before]
	![ Offset Value: 0 ](2_Offset.png)(w:500)
	[/PARAM]
	[PARAM:after]
	![ Offset Value: -0.6 ](1_Offset.png)(w:500)
	[/PARAM]
[/OBJECT]

この例では、デカール ジオメトリは、基本メッシュに近すぎて、深度がオフセットを考慮できません。小さな負のオフセット値を使うと、ジオメトリを十分押し出すので、 
下層のジオメトリと交わりません。

## 制限事項

* アーティストはソート順序を指定しません。
* タンジェント空間はまだサポートされていません。
* Shader Overdraw/Overdraw 機能がついていません。
* 深度バイアスの調整が簡単ではありません。現在、上にあるサーフェスからメッシュのオフセットを使用するか、マテリアルの World Position Offset で調整しなければなりません。
* レイヤー オーバーラップが多い場合は、アーティファクトを避けるために深度でソートします。
* マテリアル エディタ プレビューは表示されません。
* マテリアル エディタはベース パスの使用を前提としているので、正しい命令数は表示しません。
* DBuffer も non-DBuffer も同じコンテナを使用します。
* 並列レンダリングはまだ組み込まれていません。この機能を広範囲に使用すると CPU 負荷を若干抑えることができます。 

## メッシュ デカール マテリアルの使用方法

デカール マテリアルにライティング機能を使って、スタティックメッシュに適用できる基本的なディファード デカール マテリアルが作成できるように 
プロジェクト用に Dbuffer Decal を有効にするには、以下の手順に従います。  

### 必要なファイル

操作ガイドに従って作業するために、まず以下の FBX およびテクスチャ ファイルをダウンロード、展開して UE4 にインポートしてください。操作方法がよく分からない場合は、
[スタティックメッシュのインポート方法](Engine/Content/ImportingContent/ImportingMeshes) and [テクスチャのインポート方法](Engine/Content/ImportingContent/ImportingTextures) で 
詳細を確認してください。 

**[必要なテクスチャをダウンロード](MeshDecalAssets.zip)** (右クリックして [Save as (名前を付けて保存)] をクリック)


### プロジェクトで DBuffer Decals を有効にする

1. **[Edit (編集)]** メニューで **[Project Settings (プロジェクト設定)]** をクリックして [Unreal Editor] オプションを表示します。 

	![](ProjectSettingsMenu.png)(w:250)
1. 見出し **[Engine]** の下の **[Rendering]** セクションを選択し、各種ライティング オプションのある **[Lighting]** カテゴリを展開します。

	[REGION:lightbox]
	[![](ProjectSettings.png)(w:700)](ProjectSettings.png)
	[/REGION]
1. 次に **[DBuffer Decals]** オプションを Deferred Decals でライティング機能を使用するように切り替えます。
	![](EnableDBufferDecal.png)(w:350)

	1. この機能を使えるようにするには、まず **エディタを再起動** する必要があります。

	![](RestartTheEditor.png)(w:550)



### 基本のディファード デカールを作成する

1. **コンテンツ ブラウザ** で **[Add New (新規追加)]** ボタンを選択し、**[Material]** のオプションを選択して、マテリアルを新規作成します。マテリアルには、後で場所が分かりやすいような名前を付けるようにしてください。
ここでは学習内容を踏まえて、「M_MeshDecal」という名前を付けておきました。

	![](AddNewMaterial.png)(w:300)

1. **Material** を選択し、ダブルクリックして開きます。マテリアル エディタを開いて、Deferred Decal で使えるように **[Details (詳細)]** パネルの以下の属性の設定から開始します。

	* **Material Domain:** Deferred Decal
	* **Blend Mode:** Translucent
	* **Decal Blend Mode:** DBuffer Translucent Color, Normal, Roughness 

1. 次に、このページの **[Required Files]** セクションのテクスチャを使って、マテリアルを設定する必要があります。そのステップに必要なディフューズ、マスク、法線テクスチャの 3 つのテクスチャが入っている .zip ファイルがあります。
両方のテクスチャをインポートしたら、これらを **コンテンツ ブラウザ** へドラッグして、マテリアル エディタ グラフへドロップします。 

	![](MaterialGraph1.png)(w:400)

	最後に MS_VertexAnimationTools_MorphTargets マテリアル関数の出力を Main Material ノードの関連する入力値に接続します。Mask テクスチャ "T_MeshDecalDamage_M" の場合は、
	Opacity Mask 入力に挿し込んだ時は **Blue Channel** 出力を使うようにしてください。これにより、テクスチャの中の青の値が表示されるべき maskfor として確実に使用されるようになります。 
		![](MaterialGraph2.png)(w:400)

1. マテリアル グラフ内をクリックして「Constant」と入力するか、"1" キーを長押ししてグラフ内をクリックすると **Constant** 値ノードが追加されます。これを **Roughness** 入力に接続し、デフォルト値を **0.7** にします。 

	![](MaterialGraph3.png)(w:400)
1. 仕上げ前に、深度精度が原因のアーティファクトを防ぐ、または減らすためにデカール ジオメトリのオフセットを基本メッシュから調節する方法が必要になります。以下のノードをマテリアル グラフに追加して、
**Multiply** ノードの出力をメイン マテリアル ノードの **World Position Offset** 入力に接続します。 

	![](MaterialGraph4.png)(w:400)

	マテリアル グラフはこのような感じになっているはずです。 

	[REGION:lightbox]
	[![](FinalMaterialGraph.png)(w:400)](FinalMaterialGraph.png)
	[/REGION]
1. ディファード デカール マテリアルが完了したので、Required Files .zip の中のスタティックメッシュ "SM_MeshDecal" をレベルに配置して、Material **M_MeshDecal** を
スタティックメッシュのマテリアル スロットの Element 0 に適用します。基本メッシュのマテリアルの場合は、デモ目的で、すべてのマテリアルもしくは基本色を Element 1 に割り当てることができます。以下の例のように
なるはずです。 

	![](MeshDecal.png)(w:400)


## 結果

メッシュ デカールと使用する独自のマテリアルの設定および作成方法を説明したので、 
モデリング アプリケーションで自分のアセットをオーサリングし、適用されたメッシュ デカールを使うためにライティングを存分に利用したマテリアルの作成に自信を持てるはずです。 
