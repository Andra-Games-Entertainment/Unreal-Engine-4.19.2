INTSourceChangelist:3348041
Availability: Public
Title:런타임에 다이내믹 오브젝트 애니메이션
Crumbs: %ROOT%, Engine, Engine/Sequencer, Engine/Sequencer/HowTo
Description:시퀀스 저작 당시와 달라진 다이내믹 오브젝트에 시퀀스를 런타임 적용하는 방법을 보여드리는 예제입니다.
Version: 4.15
SkillLevel: Advanced
parent:Engine/Sequencer/HowTo
order:1
checkpoint: editorqs
Related: Engine/Sequencer/Overview
Related: Engine\Sequencer\ReferenceEditor\
tags:Sequencer

게임플레이 용도로 시네마틱을 제작할 때, 시퀀서를 통해 런타임 동적 스폰되는 오브젝트에 애니메이션을 주고플 때가 있습니다.
예를 들어 경로를 따라 움직이는 애니메이션 오브젝트를 만드는데, 그 오브젝트를 플레이어가 정의할 수 있는 것입니다.
[블루프린트 비주얼 스크립트](Engine/Blueprints) 덕에 **Get Sequence Bindings** 노드를 사용하여 레벨 시퀀스에서의 바인딩 식별자를 노출시키고 그 바인딩을 자신의 것으로 덮어쓸 수 있습니다.

이 예제에서는 길을 따라 오브젝트를 움직이고 애니메이션을 적용하며, 아래와 같이 플레이어가 버튼을 누르면 그 오브젝트를 바꿀 수 있습니다.

[OBJECT:EmbeddedVideo]
[PARAMLITERAL:width]
640
[/PARAMLITERAL]
[PARAMLITERAL:height]
360
[/PARAMLITERAL]
[PARAMLITERAL:videoid]
XdahqJz2cyM
[/PARAMLITERAL]
[/OBJECT]

[REGION:note]
여기서는 **블루프린트 삼인칭 템플릿** 프로젝트에 **시작용 콘텐츠** 를 포함시켜 사용하고 있습니다.
[/REGION]

## 단계

1.	**콘텐츠 브라우저** 에서 **Actor** 클래스를 기반으로 두 개의 **블루프린트** 를 새로 만들고, 이름을 하나는 **Cube_Blueprint** (큐브 블루프린트), 다른 하나는 **Sphere_Blueprint** (구체 블루프린트)라 짓습니다. 

	![](DynamicAnim_01.png)

	기본 시퀀스에는 큐브 블루프린트를 사용할 것이지만, 플레이어가 키를 누르면 구체 블루프린트로 전환합니다.

1.	각 블루프린트 안에서 하나는 **Shape_Cube** 메시를, 다른 하나는 **Shape_Sphere** 메시를 사용하는 **Static Mesh** 컴포넌트를 추가합니다.

	![](DynamicAnim_02.png)

1.	**모드** 패널에서 **공백 액터** 를 끌어 레벨 뷰포트 아무데나 놓습니다.

	![](DynamicAnim_03.png)(w:940)

1.	**메인 툴바** 에서 **시네마틱** 버튼을 클릭하고 **레벨 시퀀스 추가** 한 뒤 이름을 짓습니다.

	![](DynamicAnim_04.png)

1.	시퀀스에서 레벨에 있는 **공백 액터** 를 선택한 채, **추가** 후 **액터 추가** 하여 시퀀스에 추가합니다.

	![](DynamicAnim_05.png)

1.	**공백 액터** 에 **트랜스폼 트랙** 을 추가하고 **0** 에 레벨의 초기 위치 키를 추가합니다.

	![](DynamicAnim_06.png)

1.	타임라인을 **50** 프레임으로 옮긴 뒤 레벨의 **공백 액터** 를 이동시키고 **S** 를 눌러 새 위치에 새 키를 추가합니다.

	![](DynamicAnim_07.png)(w:740)

1.	타임라인을 **100** 프레임으로 옮기고 **공백 액터** 를 원래 시작 위치로 이동시킨 뒤 **S** 를 눌러 트랜스폼 종료 위치에 키를 추가합니다.

	![](DynamicAnim_08.png)(w:740)

	100 프레임에 있을 때 시퀀서 안에서 **]** 키를 눌러도 이 키에서 시퀀스를 종료시킬 수 있습니다.

1.	레벨 뷰포트에서 레벨 시퀀스를 선택한 후, **디테일** 패널에서 **Loop** 를 **Lopp Indefinitely** (무한 반복)으로 설정합니다. 

	![](DynamicAnim_09.png)

1.	레벨 뷰포트에 레벨 시퀀스를 선택한 채, **메인 툴바** 에서 **블루프린트** - **레벨 블루프린트 열기** 를 선택합니다.

	![](DynamicAnim_10.png)

1.	그래프에서 **우클릭** 하고 레벨 시퀀스로의 레퍼런스를 생성합니다.

	![](DynamicAnim_10b.png)

	이 경우 레벨 시퀀스 이름은 **Master** 로 했지만, 다르게 해도 됩니다.

1.	**우클릭** 후 **Event Begin Play** (Begin Play 이벤트) 노드를 추가한 뒤, 레벨 시퀀스 레퍼런스를 끌어 놓고 **Play (Sequence Player)** 노드를 추가합니다.

	![](DynamicAnim_11.png)

	그 후 아래와 같이 노드를 연결합니다.

	![](DynamicAnim_12.png)

	그러면 게임 시작 시 시퀀스 재생을 자동으로 시작합니다.

1.	그래프에 **우클릭** 하고 **1** Keyboard Event 를 추가한 뒤 **Flip Flop** 노드에 연결합니다.

	![](DynamicAnim_13.png)

	1 을 처음 누르면, 공백 액터를 큐브로 변경하고, 1 을 다시 누르면 구체로 변경할 것입니다.

1.	**우클릭** 후 **Spawn Actor From Class** 노드를 생성한 뒤 클래스를 **Cube Blueprint** 로 설정합니다. 

1.	**Return Value** 에 **우클릭** 하고 **변수로 승격** 시켜 **Cube** 라 한 뒤, **Spawn Transform** 을 끌어 놓고 **Make Transform** 을 사용합니다. 

	![](DynamicAnim_14.png)

	여기서 1 을 누르면 큐브 블루프린트를 스폰하고 있습니다. Cube 라는 변수에 저장한 뒤 스폰시킬 기본 트랜스폼을 지정합니다.

1.	**Flip Flop** 노드의 **B** 핀에서 (**Sphere Blueprint** 로 설정된) **Spawn Actor from Class** 를 사용하고, 그것을 저장하기 위한 변수를 만들어 아래와 같이 연결합니다.

	![](DynamicAnim_15.png)

	1 을 두 번째 누르면, 이제 구체 블루프린트를 만들어 스폰하고 나중에 사용할 수 있도록 변수에 저장합니다.

1.	그래프에서 **우클릭** 하고 **Get Sequence Bindings** 노드를 추가한 뒤 **디테일** 패널에서 레벨 시퀀스로 지정해 줍니다.

	![](DynamicAnim_16.png)

	그러면 블루프린트 스크립트를 통해 레벨 시퀀스 내용물에 접근하고 덮어쓸 수 있도록 해줍니다.

1.	그래프에 **우클릭** 하고 **Add Binding** 노드를 추가한 뒤 다음 노드를 연결합니다:

	![](DynamicAnim_17.png)

	위에서 레벨 시퀀스로의 레퍼런스를 **Target** 으로, **Get Sequence Bindings** 노드를 **Binding** 으로, 스폰한 큐브에 대해 생성한 변수를 **Actor** 로 연결했습니다.
	그러면 레벨 시퀀스의 공백 액터 (**Actor**) 를 지정한 (**Cube** 또는 **Sphere**) 액터로 대체할 수 있습니다. 공백 액터에 적용된 애니메이션 역시 바인딩 일부로 설정한 액터에 적용될 것입니다.

1.	스크립트 **Sphere** 부분에 대한 예전 단계를 반복, **Cube** 를 **Sphere** 로 **Actor** 에 대체합니다. 

	![](DynamicAnim_18.png)

1.	스크립트의 큐브 부분에서 **Add Binding** 노드 다음, **Sphere** 변수를 사용해서 **? IsValid** 검사를 하고 유효한 경우 **Destroy Actor** 합니다.

	![](DynamicAnim_19.png)

	그러면 큐브를 스폰할 때 구체를 소멸시킵니다.

1.	스크립트의 **Sphere** 부분에 대한 예전 단계를 반복, **Cube** 변수의 **? IsValid** 를 사용하여 유효한 경우 **Destroy Actor** 합니다.

	![](DynamicAnim_20.png)

	그러면 구체를 스폰할 때 큐브를 소멸시킵니다.

1.	에디터에서 플레이한 뒤, **1** 키를 눌러 스폰되는 액터를 순환시킵니다.
	


## 최종 결과

에디터에서 플레이하고 1 키를 누르면, 공백 액터가 큐브 또는 구체로 스폰되는 액터로 대체되나, 적용한 애니메이션은 계속 유지됩니다.

[OBJECT:EmbeddedVideo]
[PARAMLITERAL:width]
640
[/PARAMLITERAL]
[PARAMLITERAL:height]
360
[/PARAMLITERAL]
[PARAMLITERAL:videoid]
XdahqJz2cyM
[/PARAMLITERAL]
[/OBJECT]

**Set Binding** 노드로 바인딩에 액터 배열을 설정 및 바인딩할 수도, **Reset Binding** 으로 특정 바인딩 또는 **Reset Bindings** 로 전체 레벨 시퀀스 리셋도 가능합니다.

![](AdditionalFunctions.png)



