INTSourceChangelist:3340363
Availability: Public
Title:커스텀 이벤트 & 커스텀 구조체
Crumbs: %ROOT%, Engine, Engine/Sequencer, Engine/Sequencer/HowTo
Description:이벤트 트랙을 사용하여 블루프린트에서 사용할 커스텀 구조체를 가진 커스텀 이벤트 호출 방법을 보여드립니다.
Version: 4.15
SkillLevel: Intermediate
parent:Engine/Sequencer/HowTo
order:1
checkpoint: editorqs
Related: Engine/Sequencer/Overview
Related: Engine\Sequencer\ReferenceEditor\
tags:Sequencer

**Event Track** (이벤트 트랙)은 [**레벨 블루프린트**](Engine/Blueprints/UserGuide/Types/LevelBlueprint) 안에서 [**커스텀 이벤트**](Engine/Blueprints/UserGuide/Events/Custom) 호출 및 [**블루프린트 스크립트**](Engine/Blueprints) 를 발동시키는 데 사용될 수 있습니다.
커스텀 이벤트가 호출되면, 거기에 붙은 스크립트 역시도 실행되며, 필요에 따라 어떤 경우의 수만큼도 사용 가능합니다.
이벤트 트랙을 사용하여 커스텀 이벤트를 호출할 때, 별도의 커스텀 [구조체](Engine/Blueprints/UserGuide/Variables/Structs) 를 같이 전달할 수 있는데, 이를 통해 그 안에 포함된 변수를 업데이트할 수 있습니다.
레벨 시퀀스 재생 도중 다른 변수를 업데이트하고자 하는 상황에 유용하게 쓰일 수 있습니다.

이 예제에서는 이벤트 트랙을 사용하여 시퀀스 재생 시 레벨에서 오브젝트를 이동시키는 데 사용되는 커스텀 구조체 포함 커스텀 이벤트를 호출합니다.

[OBJECT:EmbeddedVideo]
[PARAMLITERAL:width]
640
[/PARAMLITERAL]
[PARAMLITERAL:height]
360
[/PARAMLITERAL]
[PARAMLITERAL:videoid]
wlLcUr8BXvY
[/PARAMLITERAL]
[/OBJECT]

위 예제에서 키를 누르면 레벨 시퀀스가 재생되고 이벤트가 한 번 실행될 때마다 큐브가 위로 이동합니다.

## 단계

[REGION:note]
여기서는 **블루프린트 삼인칭 템플릿** 프로젝트에 **시작용 콘텐츠** 를 포함시켜 사용하고 있습니다.
[/REGION]

1.	**콘텐츠 브라우저** 에서 **Content/StarterContent/Shapes** 폴더 아래 메시를 끌어 레벨에 놓습니다.

	![](EventTrack1.png)

	메시를 레벨 내 아무데나 놓습니다.

1.	메시의 **디테일** 패널에서 메시를 **무버블** 로 설정합니다.

	![](EventTrack1b.png)

	그러면 게임플레이 도중 메시를 움직일 수 있습니다.

1.	**신규 추가** 버튼을 클릭하고, **블루프린트** 아래 **구조체** 옵션을 선택합니다.

	![](EventTrack2.png)

1.	이름을 **MyStruct** 라 한 뒤 애셋을 열고 **Vector** 변수를 추가, 이름을 **MoveCube** 라 합니다. 

	![](EventTrack3.png)

	여기서 변수 이름이 중요한데, 나중에 이 이름을 사용하여 레퍼런스를 지정할 것이기 때문입니다.

1.	**시네마틱** 버튼에서 **Master** 라는 **레벨 시퀀스** 를 새로 추가한 뒤, **시퀀서** 안에서 **이벤트 트랙** 을 추가합니다.

	![](EventTrack4.png)

1.	타임라인을 **5** 프레임으로 옮기고 키를 추가한 뒤, 키에 우클릭하고 이벤트 이름을 **LiftCube** 라 합니다. **MyStruct** 를 할당하고 **Z** 값을 **100** 으로 설정합니다. 

	![](EventTrack5.png)

	시퀀스에서 이 키프레임에 도달하면, 메시를 Z 축으로 100 유닛 위로 이동시키겠습니다.

1.	타임라인을 **10** 프레임으로 옮기고 **]** 키를 눌러 시퀀스를 10 프레임에서 종료시킵니다.

	![](EventTrack6.png)

1.	레벨에서 추가한 메시와 레벨 시퀀스를 선택하고, 툴바의 **블루프린트** 버튼을 클릭한 뒤 **레벨 블루프린트 열기** 를 선택합니다.

	![](EventTrack7.png)

1.	**레벨 블루프린트** 에서 **우클릭** 하고 **Reference** (레퍼런스)를 검색한 뒤 **Create Reference to 2 selected Actors** (2 개의 선택된 액터로의 레퍼런스 생성)을 선택합니다. 

	![](EventTrack8.png)

1.	그래프에 우클릭하고 **1** 키보드 이벤트를 추가한 뒤 **Master** 레벨 시퀀스를 끌어놓고 **Set Playback Position** 노드를 검색 추가합니다.

	![](EventTrack9.png)

	그러면 플레이를 시작할 때마다 시퀀스를 리셋시켜 실제 재생 함수 호출을 내릴 수 있습니다.
	
1.	추가한 **Sequence Player** 노드를 끌어놓고 **Play** 노드를 사용하여 아래와 같이 연결합니다.

	![](EventTrack10.png)

1.	그래프에 **우클릭** 하고 **Custom Event** 를 생성하여 **LiftCube** 라 합니다. 

	![](EventTrack11.png)

	[REGION:warning]
	Custom Event 이름은 시퀀서의 키에 지정한 **Event Name** 과 같아야 합니다. 그렇지 않으면 호출되지 않습니다.
	[/REGION]

1.	Custom Event 의 **디테일** 패널에서 **+** 버튼을 눌러 입력을 추가하고 이름을 **MoveCube**, 변수 유형은 **Vector** 로 합니다.

	![](EventTrack12.png)

	[REGION:warning]
	입력 이름이 구조체에 사용된 이름과 같아야 합니다. 그렇지 않으면 이벤트가 호출되지 않습니다.
	또한 입력 수가 커스텀 구조체에 정의된 변수 개수와 일치해야 합니다. 그렇지 않으면 이벤트는 호출되지 않습니다.
	예를 들어, 구조체 안에 변수가 둘 있는 경우, Custom Event 역시 올바른 변수 이름과 유형의 입력이 둘 있어야 합니다.
	[/REGION]
	
1.	메시 레퍼런스를 끌어 놓고 **AddActorLocalOffset** 노드를 검색 추가합니다.

	![](EventTrack13.png)

1.	아래와 같이 **MoveCube** 벡터 핀을 **Delta Location** 핀에 연결하고 **LiftCube** 실행 핀을 **AddActorLocalOffset** 노드에 연결합니다.

	![](EventTrack14.png)

1.	메인 툴바의 **플레이** 버튼을 눌러 에디터에서 플레이합니다.


## 최종 결과

에디터에서 플레이하면, **1** 키를 누를 때마다 큐브가 **Z** 축으로 올라갈 것입니다.

[OBJECT:EmbeddedVideo]
[PARAMLITERAL:width]
640
[/PARAMLITERAL]
[PARAMLITERAL:height]
360
[/PARAMLITERAL]
[PARAMLITERAL:videoid]
wlLcUr8BXvY
[/PARAMLITERAL]
[/OBJECT]

이 예제에서는 시네마틱을 확인할 카메라를 할당하지 않은 대신 시퀀서와 블루프린트를 사용하여 스크립트 시퀀스를 수행하고 있습니다.
프로젝트에서는 커스텀 이벤트 및 커스텀 구조체와 함께 이벤트 트랙을 사용하여 컷씬 도중 (플레이어가 생명령 증가, 새 무기, 기타 게임플레이 관련 효과 등) 플레이어 정보를 업데이트할 수 있습니다.































