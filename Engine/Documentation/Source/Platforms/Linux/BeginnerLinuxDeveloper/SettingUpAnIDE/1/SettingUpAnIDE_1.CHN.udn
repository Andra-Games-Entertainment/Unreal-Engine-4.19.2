INTSourceChangelist:3298291
Availability:Public
Title:1 - 配置 IDE 编译 UE4
Crumbs:
Description:学习如何配置 IDE，在调试和发布模式下编译 UE4。
Version:4.14
type:how to
parent:Platforms/Linux/BeginnerLinuxDeveloper/SettingUpAnIDE
order:1
tags:Linux
SkillLevel:Beginner

[NAV]

虽然部分开发者喜欢使用文本编辑器和命令行调试器修改游戏源代码，但多数开发者更愿意使用整合开发环境（IDE）进行代码的编辑、调试和编译。此指南将为您说明如何在 Linux 环境下设置和虚幻引擎 4（UE4）兼容的 IDE。 

选择 IDE 很大程度上出于个人偏好，而我们特意为 UE4 在 Linux 中配置了 3 个连接的 IDE：Qt Creator、KDevelop 和 Codelite。我们不特意推荐某个 IDE，然而为行文方便，在此以 Qt Creator 为例，说明如何对其进行配置，以便编译和运行 UE4。完成此教程的阅读后，您便会学习到如何配置 IDE 编译并运行 UE4。最后，您还将了解到如何设置 IDE 编译并运行在虚幻编辑器中创建的新 C++（CPP）项目。

[REGION:note]
开始之前，请使用 [](Platforms/Linux/BeginnerLinuxDeveloper/SettingUpAnUnrealWorkflow) 完成工作流的设置。此外，务必将 [Qt Creator](https://wiki.qt.io/Install_Qt_5_on_Ubuntu) 安装到您的电脑上。
[/REGION]

1.	运行 Qt Creator，打开 **Qt Welcome** 菜单。  

	[REGION:lightbox]
		[![](SetupIDE_Step1.png)(w:720)](SetupIDE_Step1.png)
	[/REGION]
	
	[REGION:caption]
		点击查看全图。
	[/REGION]

1.	点击 **Open Project** 按钮打开 Qt 项目文件浏览器。  

	[REGION:lightbox]
		[![](SetupIDE_Step2.png)(w:720)](SetupIDE_Step2.png)
	[/REGION]
	
	[REGION:caption]
		点击查看全图。
	[/REGION]

1.	前往编译 UE4 的目录，选择 UE4 Qt 项目（**UE4.pro**）文件，并点击 **Open** 按钮。

	[REGION:lightbox]
		[![](SetupIDE_Step3.png)(w:720)](SetupIDE_Step3.png)
	[/REGION]
	
	[REGION:caption]
		点击查看全图。
	[/REGION]

1.	此时尚未配置 Qt Creator 在 Debug 和 Release 模式中编译 UE4。点击 **Configure Project** 菜单中的 **Configure Project** 按钮。

	[REGION:lightbox]
		[![](SetupIDE_Step4.png)(w:720)](SetupIDE_Step4.png)
	[/REGION]
	
	[REGION:caption]
		点击查看全图。
	[/REGION]

1.	此时，点击 **Projects** 按钮进入 Projects 模式，打开 **Build Settings** 菜单。

	[REGION:lightbox]
		[![](SetupIDE_Step5.png)(w:720)](SetupIDE_Step5.png)
	[/REGION]
	
	[REGION:caption]
		点击查看全图。
	[/REGION]

	[REGION:note]
	打开 **Build Settings** 菜单时，您会看到 Qt Creator 已将 **Edit build configuration:** 默认设为 **Debug** 模式。
	[region: lightbox]
	[![](SetupIDE_Step5_Note.png)(w:347 h:249)](SetupIDE_Step5_Note.png)
	[/region]
	[REGION:caption]
	点击查看全图。
	[/REGION]
	[/REGION]

1.	在 **Build Steps** 部分中，点击 **Details** 下拉菜单旁边的 **X** 按钮清除 **qmake** 编译步骤。

	[REGION:lightbox]
		[![](SetupIDE_Step6Alt.png)(w:720)](SetupIDE_Step6Alt.png)
	[/REGION]
	
	[REGION:caption]
		点击查看全图。
	[/REGION]

1.	取消勾选 **Shadow build**。 

	[REGION:lightbox]
		[![](SetupIDE_Step7.png)(w:720)](SetupIDE_Step7.png)
	[/REGION]
	
	[REGION:caption]
		点击查看全图。
	[/REGION]

	[REGION:note]
	阴影编译能通过 Qt Creator 的 qmake 工具在单独的编译目录中编译项目。因为 UE4 分布有 
	使用 [](Programming/UnrealBuildSystem) 的自定义 Make 文件，您无需使用 Qt Creator 的 qmake 工具。
	[/REGION]

1.	点击 **Details** 下拉菜单打开 **Make** 编译步骤的输入表。

	![](SetupIDE_Step8.png)

1.	在 **Make arguments:** 文本域中输入 `UE4Editor-Linux-Debug`。

	![](SetupIDE_Step9.png)

1.	在 **Clean Steps** 部分中，点击 **Details** 下拉菜单打开 **Make** 清理步骤的输入表。

	![](SetupIDE_Step10.png)

1.	在 **Make arguments:** 文本域中输入 `UE4Editor-Linux-Debug ARGS="-clean"` 替代 `clean`。

	![](SetupIDE_Step11.png)

1.	点击 **Edit build configuration:** 下拉菜单并选择 **Release**，打开 Release 模式的 **Build Settings**。

	[REGION:lightbox]
		[![](SetupIDE_Step12.png)(w:720)](SetupIDE_Step12.png)
	[/REGION]
	
	[REGION:caption]
		点击查看全图。
	[/REGION]

1.	重复步骤 6-11，编辑 Release 模式的编译配置设置。请确保设置与下图相匹配。

	![](SetupIDE_Step13.png)

	[REGION:note]
	如需要为项目设置额外的编译配置，请参考 Qt Creator [编译设置文档](http://doc.qt.io/qtcreator/creator-build-settings.html)。
	您能从中了解到如何添加需要的编译配置。
	[/REGION]

## 最终结果

[REGION:lightbox]
	[![](QtBuildSettings_UE4.png)(w:720)](QtBuildSettings_UE4.png)
[/REGION]

[REGION:caption]
	点击查看全图。
[/REGION]

此时您便完成了 UE4 在 Debug 和 Release 模式中编译的配置。取决于系统配置的不同，您可能会发现 UE4 在 Debug 模式中运行较慢。如需了解可用编译配置性能特征的更多内容，请通读 [](Programming/Development/BuildConfigurations) 页面。了然于胸后，您便可以开始配置 Qt Creator 运行 UE4。

[NAV]
